{"version":3,"sources":["context/TransactionsContext.js","context/TransactionReducer.js","context/AuthReducer.js","context/AuthContext.js","components/Signin.js","components/Header.js","components/IncomeCard.js","components/ExpenseCard.js","components/SubCategories.js","components/AddTransaction.js","components/ConfirmModal.js","components/Transaction.js","components/TransactionSummary.js","components/Dashboard.js","App.js","index.js"],"names":["data","state","action","type","transactions","payload","isModalOpen","incomeSubCategories","expenseSubCategories","totalIncome","totalExpenses","localStorage","getItem","JSON","parse","initialState","Salary","Others","Food","Shopping","Grocery","TransactionsContext","createContext","TransactionsProvider","children","useReducer","TransactionReducer","dispatch","useEffect","setItem","stringify","Provider","value","updateTotalIncomeExpenses","amount","updateExpenseSubCategoriesTotal","subCategories","toggleModal","addTransaction","transaction","deleteTransaction","updatedTransactions","selectedForDeletion","updateIncomeSubCategoriesTotal","users","isAuthenticated","name","email","password","confirmPassword","AuthContext","AuthProvider","AuthReducer","addUser","newUser","validateUser","SignIn","props","useContext","className","initialValues","onSubmit","values","setSubmitting","forEach","user","history","push","alert","validationSchema","Yup","shape","required","touched","errors","handleChange","handleBlur","handleSubmit","placeholder","onChange","onBlur","Header","balance","style","display","justifyContent","alignItems","flexDirection","marginLeft","color","fontSize","IncomeCard","mutatedSubCategories","subCategoriesArray","Object","keys","incomeArray","filter","category","toLowerCase","trim","item","filteredSubCategories","subCategory","length","reduce","total","ExpenseCard","expensesArray","SubCategories","updateSubCategory","subCategoryOptions","map","index","key","id","AddTransaction","toggleTransactionModal","myDate","Date","thisDay","getDay","month","getMonth","year","getFullYear","today","useState","description","setDescription","setAmount","date","setDate","setCategory","setSubCategory","e","target","margin","onClick","preventDefault","newTransaction","Math","floor","random","toDelete","ConfirmModal","transactionToDelete","Transaction","confirmModal","mutatedTransactions","onDoubleClick","selectedTransaction","bind","TransactionSummary","modal","setModal","transactionModal","textAlign","colSpan","Dashboard","updateIncomeExpenseAmount","income","expense","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d60fe7c4.chunk.js","sourcesContent":["import React, { createContext, useReducer, useEffect } from 'react';\nimport TransactionReducer from './TransactionReducer';\n\nlet data;\n\nif (localStorage.getItem('transactions')) {\n  data = JSON.parse(localStorage.getItem('transactions'));\n} else {\n  data = [];\n}\n\nconst initialState = {\n  transactions: [...data],\n  totalIncome: 0,\n  totalExpenses: 0,\n  isModalOpen: false,\n  incomeSubCategories: { Salary: 0, Others: 0 },\n  expenseSubCategories: { Food: 0, Shopping: 0, Grocery: 0, Others: 0 }\n};\n\n//context\nexport const TransactionsContext = createContext(initialState);\n\n// provider\nexport const TransactionsProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(TransactionReducer, initialState);\n\n  useEffect(() => {\n    const data = localStorage.getItem('transactions');\n    if (data) {\n      initialState.transactions = JSON.parse(data);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('transactions', JSON.stringify(state.transactions));\n  });\n  //actions\n  function addTransaction(transaction) {\n    dispatch({\n      type: 'ADD_TRANSACTION',\n      payload: transaction\n    });\n  }\n\n  function selectedForDeletion(transaction) {\n    dispatch({\n      type: 'TO_DELETE',\n      payload: transaction\n    });\n  }\n\n  function deleteTransaction(updatedTransactions) {\n    dispatch({\n      type: 'DELETE_TRANSACTIONS',\n      payload: updatedTransactions\n    });\n  }\n\n  function updateTotalIncomeExpenses(amount) {\n    dispatch({\n      type: 'TOTAL_INCOME_EXPENSES',\n      payload: amount\n    });\n  }\n\n  function updateIncomeSubCategoriesTotal(subCategories) {\n    dispatch({\n      type: 'UPDATE_INCOME_SUB_CATEGORIES_TOTAL',\n      payload: subCategories\n    });\n  }\n  \n  function updateExpenseSubCategoriesTotal(subCategories) {\n    dispatch({\n      type: 'UPDATE_EXPENSE_SUB_CATEGORIES_TOTAL',\n      payload: subCategories\n    });\n  }\n\n  function toggleModal() {\n    dispatch({\n      type: 'IS_MODAL_OPEN'\n    });\n  }\n\n  return (\n    <TransactionsContext.Provider\n      value={{\n        transactions: state.transactions,\n        isModalOpen: state.isModalOpen,\n        incomeSubCategories: state.incomeSubCategories,\n        expenseSubCategories: state.expenseSubCategories,\n        totalExpenses: state.totalExpenses,\n        totalIncome: state.totalIncome,\n        updateTotalIncomeExpenses,\n        updateExpenseSubCategoriesTotal,\n        toggleModal,\n        addTransaction,\n        deleteTransaction,\n        selectedForDeletion,\n        updateIncomeSubCategoriesTotal\n      }}\n    >\n      {children}\n    </TransactionsContext.Provider>\n  );\n};\n","export default (state, action) => {\n  switch (action.type) {\n    case 'ADD_TRANSACTION':\n      return {\n        ...state,\n        transactions: [...state.transactions, action.payload]\n      };\n    case 'TO_DELETE':\n      return {\n        ...state,\n        transactions: [...action.payload]\n      };\n    case 'IS_MODAL_OPEN':\n      return {\n        ...state,\n        isModalOpen: !state.isModalOpen\n      };\n    case 'DELETE_TRANSACTIONS':\n      return {\n        ...state,\n        transactions: [...action.payload]\n      };\n    case 'UPDATE_INCOME_SUB_CATEGORIES_TOTAL':\n      return {\n        ...state,\n        incomeSubCategories: { ...action.payload }\n      };\n    case 'UPDATE_EXPENSE_SUB_CATEGORIES_TOTAL':\n      return {\n        ...state,\n        expenseSubCategories: { ...action.payload }\n      };\n    case 'TOTAL_INCOME_EXPENSES':\n      return {\n        ...state,\n        totalIncome: action.payload.totalIncome,\n        totalExpenses: action.payload.totalExpenses\n      };\n    default:\n      return state;\n  }\n};\n","export default (state, action) => {\n  switch (action.type) {\n    case 'NEW_USER':\n      return {\n        ...state,\n        users: [...state.users, action.payload]\n      };\n    case 'VALIDATE_USER':\n      return {\n        ...state,\n        isAuthenticated: action.payload\n      };\n    default:\n      return state;\n  }\n};\n","import React, { createContext, useReducer} from 'react';\nimport AuthReducer from './AuthReducer';\n\n//state\nconst initialState = {\n  users: [\n    {\n      name: 'test',\n      email: 'a@a.com',\n      password: 'pass',\n      confirmPassword: 'pass'\n    }\n  ],\n  isAuthenticated: false\n};\n\n//context\nexport const AuthContext = createContext(initialState);\n\n//provider\nexport const AuthProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(AuthReducer, initialState);\n\n  //actions\n  function addUser(newUser) {\n    dispatch({\n      type: 'NEW_USER',\n      payload: newUser\n    });\n  }\n\n  function validateUser(isAuthenticated) {\n    dispatch({\n      type: 'VALIDATE_USER',\n      payload: isAuthenticated\n    });\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        users: state.users,\n        isAuthenticated: state.isAuthenticated,\n        addUser,\n        validateUser\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n","import React, { useContext } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { AuthContext } from '../context/AuthContext';\n\nconst SignIn = props => {\n  const { users, validateUser } = useContext(AuthContext);\n\n  return (\n    <div className='signin_signup_form'>\n      <h1>Sign In</h1>\n      <Formik\n        initialValues={{ email: '', password: '' }}\n        onSubmit={(values, setSubmitting) => {\n          let isAuthenticated;\n          users.forEach(user => {\n            if (\n              values.email === user.email &&\n              values.password === user.password\n            ) {\n              isAuthenticated = true;\n              validateUser(isAuthenticated);\n              props.history.push('/simple-budget-react/dashboard/');\n            } else {\n              isAuthenticated = false;\n              validateUser(isAuthenticated);\n              alert('Please enter valid credentials');\n            }\n          });\n        }}\n        validationSchema={Yup.object().shape({\n          email: Yup.string()\n            .email()\n            .required('Email id is Required'),\n          password: Yup.string().required('Please enter your password')\n        })}\n      >\n        {props => {\n          const {\n            values,\n            touched,\n            errors,\n            handleChange,\n            handleBlur,\n            handleSubmit\n          } = props;\n\n          return (\n            <form onSubmit={handleSubmit}>\n              <div className='form-control'>\n                <input\n                  name='email'\n                  type='email'\n                  placeholder='Email'\n                  value={values.email}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={errors.email && touched.email && 'error'}\n                />\n                {errors.email && touched.email && <small>{errors.email}</small>}\n              </div>\n              <div className='form-control'>\n                <input\n                  name='password'\n                  type='password'\n                  placeholder='Password'\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={errors.password && touched.password && 'error'}\n                />\n                {errors.password && touched.password && (\n                  <small>{errors.password}</small>\n                )}\n              </div>\n\n              <button type='submit'>Sign In</button>\n            </form>\n          );\n        }}\n      </Formik>\n    </div>\n  );\n};\n\nexport default SignIn;\n","import React, { useContext } from 'react';\nimport { TransactionsContext } from '../context/TransactionsContext';\n\nconst Header = () => {\n  const { totalIncome, totalExpenses } = useContext(TransactionsContext);\n\n  // const totalIncome = transactions\n  //   .filter(transaction => transaction.category.toLowerCase() === 'income')\n  //   .reduce((total, transaction) => total + transaction.amount, 0);\n\n  // const totalExpense = transactions\n  //   .filter(transaction => transaction.category.toLowerCase() === 'expense')\n  //   .reduce((total, transaction) => total + transaction.amount, 0);\n\n  const balance = totalIncome - totalExpenses;\n  const style = {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column'\n  };\n  return (\n    <div style={style}>\n      <h3 style={{ marginLeft: '15px', color: 'white' }}>Your Balance</h3>\n      <p style={{ color: 'white', fontSize: '2em' }}>{balance}</p>\n    </div>\n  );\n};\n\nexport default Header;\n// transactions.reduce((total,transaction) => total + transaction.amount,0)\n","import React, { useContext, useEffect } from 'react';\nimport { TransactionsContext } from '../context/TransactionsContext';\n\nconst IncomeCard = () => {\n  const {\n    transactions,\n    incomeSubCategories,\n    updateIncomeSubCategoriesTotal,\n    totalIncome\n  } = useContext(TransactionsContext);\n\n  const mutatedSubCategories = { ...incomeSubCategories };\n  const subCategoriesArray = Object.keys(mutatedSubCategories);\n\n  //Updating the total amount of the subcategories\n  const incomeArray = transactions.filter(\n    transaction => transaction.category.toLowerCase().trim() === 'income'\n  );\n\n  subCategoriesArray.forEach(item => {\n    const filteredSubCategories = incomeArray.filter(\n      transaction =>\n        transaction.subCategory.toLowerCase().trim() ===\n        item.toLowerCase().trim()\n    );\n    if (filteredSubCategories.length > 0) {\n      mutatedSubCategories[item] = filteredSubCategories.reduce(\n        (total, transaction) => total + transaction.amount,\n        0\n      );\n    } else {\n      mutatedSubCategories[item] = 0;\n    }\n  });\n\n  useEffect(() => {\n    updateIncomeSubCategoriesTotal(mutatedSubCategories);\n  }, [transactions]);\n\n  return (\n    <div className='card'>\n      <div className='heading'>\n        <h5>INCOME</h5>\n        <p style={{ color: '#3fb485' }}>INR {totalIncome}</p>\n      </div>\n      <div className='content'>\n        <div className=\"content-heading\">\n          <p>Category</p>\n          <p>Amount</p>\n        </div>\n        <ul>\n          <li>\n            Salary <span className='amount'>{incomeSubCategories.Salary}</span>\n          </li>\n          <li>\n            Others <span className='amount'>{incomeSubCategories.Others}</span>\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default IncomeCard;\n","import React, { useContext, useEffect } from 'react';\nimport { TransactionsContext } from '../context/TransactionsContext';\n\nconst ExpenseCard = () => {\n  const {\n    transactions,\n    expenseSubCategories,\n    totalExpenses,\n    updateExpenseSubCategoriesTotal\n  } = useContext(TransactionsContext);\n  const mutatedSubCategories = { ...expenseSubCategories };\n  const subCategoriesArray = Object.keys(mutatedSubCategories);\n\n  //Updating the total amount of the subcategories\n  const expensesArray = transactions.filter(\n    transaction => transaction.category.toLowerCase().trim() === 'expense'\n  );\n\n  subCategoriesArray.forEach(item => {\n    const filteredSubCategories = expensesArray.filter(\n      transaction =>\n        transaction.subCategory.toLowerCase().trim() ===\n        item.toLowerCase().trim()\n    );\n    if (filteredSubCategories.length > 0) {\n      mutatedSubCategories[item] = filteredSubCategories.reduce(\n        (total, transaction) => total + transaction.amount,\n        0\n      );\n    } else {\n      mutatedSubCategories[item] = 0;\n    }\n  });\n\n  useEffect(() => {\n    updateExpenseSubCategoriesTotal(mutatedSubCategories);\n  }, [transactions]);\n  return (\n    <div className='card'>\n      <div className='heading'>\n        <h5>EXPENSE</h5>\n        <p style={{ color: '#f84e4e' }}>INR {totalExpenses}</p>\n      </div>\n      <div className='content'>\n        <div className='content-heading'>\n          <p>Category</p>\n          <p>Amount</p>\n        </div>\n        <ul>\n          <li>\n            Food <span className='amount'>{expenseSubCategories.Food}</span>\n          </li>\n          <li>\n            Shopping{' '}\n            <span className='amount'>{expenseSubCategories.Shopping}</span>\n          </li>\n          <li>\n            Grocery{' '}\n            <span className='amount'>{expenseSubCategories.Grocery}</span>\n          </li>\n          <li>\n            Others <span className='amount'>{expenseSubCategories.Others}</span>\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpenseCard;\n","import React, { useContext } from 'react';\nimport { TransactionsContext } from '../context/TransactionsContext';\n\nconst SubCategories = ({ category, subCategory, updateSubCategory }) => {\n  const { incomeSubCategories, expenseSubCategories } = useContext(\n    TransactionsContext\n  );\n\n  let subCategoryOptions = null;\n\n  if (category.toLowerCase().trim() === 'income') {\n    subCategoryOptions = Object.keys(incomeSubCategories).map(\n      (subCategory, index) => {\n        return (\n          <option key={subCategory + index} value={subCategory}>\n            {subCategory}\n          </option>\n        );\n      }\n    );\n  } else {\n    subCategoryOptions = Object.keys(expenseSubCategories).map(\n      (subCategory, index) => {\n        return (\n          <option key={subCategory + index} value={subCategory}>\n            {subCategory}\n          </option>\n        );\n      }\n    );\n  }\n\n  return (\n    <select\n      value={subCategory}\n      onChange={updateSubCategory}\n      name='category'\n      id='sub-category'\n    >\n      {subCategoryOptions}\n    </select>\n  );\n};\n\nexport default SubCategories;\n","import React, { useState, useContext } from 'react';\nimport { TransactionsContext } from '../context/TransactionsContext';\nimport SubCategories from './SubCategories';\n\nconst AddTransaction = ({ toggleTransactionModal }) => {\n  const myDate = new Date();\n  let thisDay = myDate.getDay();\n  let month = myDate.getMonth() + 1;\n  const year = myDate.getFullYear();\n\n  if (thisDay < 10) {\n    thisDay = `0${thisDay}`;\n  }\n\n  if (month < 10) {\n    month = `0${month}`;\n  }\n\n  const today = `${year}:${month}:${thisDay}`;\n\n  const [description, setDescription] = useState('');\n  const [amount, setAmount] = useState(0);\n  const [date, setDate] = useState(today);\n  const [category, setCategory] = useState('Income');\n  const [subCategory, setSubCategory] = useState('Salary');\n  const { addTransaction, expenseSubCategories } = useContext(\n    TransactionsContext\n  );\n\n  const updateDescription = e => {\n    setDescription(e.target.value);\n  };\n\n  const updateAmount = e => {\n    setAmount(e.target.value);\n  };\n\n  const updateCategory = e => {\n    setCategory(e.target.value);\n    if (e.target.value.toLowerCase().trim() === 'expense') {\n      setSubCategory(Object.keys(expenseSubCategories)[0]);\n    }\n  };\n\n  const updateDate = e => {\n    setDate(e.target.value);\n  };\n\n  const updateSubCategory = e => {\n    setSubCategory(e.target.value);\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (amount <= 0) {\n      alert('Please enter a valid amount');\n      return;\n    }\n\n    const newTransaction = {\n      id: Math.floor(Math.random() * 100002),\n      date,\n      amount: +amount,\n      description,\n      category,\n      subCategory,\n      toDelete: false\n    };\n\n    addTransaction(newTransaction);\n    toggleTransactionModal();\n  };\n\n  const closeModal = () => {\n    toggleTransactionModal();\n  };\n\n  const subCategories = (\n    <SubCategories\n      category={category}\n      subCategory={subCategory}\n      updateSubCategory={updateSubCategory}\n    />\n  );\n\n  return (\n    <div className='card add-transaction-container'>\n      <div className='overlay'></div>\n      <div className='add-transaction-card'>\n        <div className='heading'>\n          <h4 style={{ margin: '0' }}>Add a new Transaction</h4>\n          <div className='close-btn' onClick={closeModal}>\n            X\n          </div>\n        </div>\n        <form onSubmit={onSubmit}>\n          <input\n            value={description}\n            onChange={updateDescription}\n            type='text'\n            name='description'\n            id='description'\n            placeholder='Description'\n            required\n          />\n          <input\n            value={amount}\n            onChange={updateAmount}\n            type='number'\n            name='amount'\n            id='amount'\n            required\n          />\n\n          <input\n            value={date}\n            onChange={updateDate}\n            type='date'\n            id='date'\n            required\n          />\n\n          <div className='category'>\n            <select onChange={updateCategory} name='category' id='category'>\n              <option value='Income'>Income</option>\n              <option value='Expense'>Expense</option>\n            </select>\n          </div>\n          <div className='sub-category'>{subCategories}</div>\n          <button type='submit'>Submit</button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default AddTransaction;\n","import React, { useContext } from 'react';\nimport { TransactionsContext } from '../context/TransactionsContext';\n\nconst ConfirmModal = ({ transactionToDelete }) => {\n  const { transactions, deleteTransaction, toggleModal } = useContext(\n    TransactionsContext\n  );\n\n  const deleteItem = () => {\n    if (transactionToDelete.toDelete) {\n      const updatedTransactions = transactions.filter(\n        transaction => transaction.toDelete !== transactionToDelete.toDelete\n      );\n      deleteTransaction(updatedTransactions);\n      toggleModal();\n    }\n  };\n\n  const closeModal = () => {\n    toggleModal();\n    transactionToDelete.toDelete = false;\n  };\n\n  return (\n    <div className='modal'>\n      <div className='modal-box'>\n        <p>Are you sure?</p>\n        <div className='modal-box_buttons'>\n          <button onClick={deleteItem}>Yes</button>\n          <button onClick={closeModal} className='danger'>\n            Cancel\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ConfirmModal;\n","import React, { useContext } from 'react';\nimport { TransactionsContext } from '../context/TransactionsContext';\nimport ConfirmModal from './ConfirmModal';\n\nconst Transaction = ({ transaction }) => {\n  const {\n    transactions,\n    selectedForDeletion,\n    isModalOpen,\n    toggleModal\n  } = useContext(TransactionsContext);\n  let confirmModal = null;\n\n  let mutatedTransactions = transactions;\n\n  const onDoubleClick = selectedTransaction => {\n    mutatedTransactions.forEach(transaction => {\n      if (selectedTransaction.id === transaction.id) {\n        transaction.toDelete = true;\n      }\n    });\n\n    selectedForDeletion(mutatedTransactions);\n    toggleModal();\n  };\n  if (isModalOpen) {\n    transactions.forEach(transaction => {\n      if (transaction.toDelete) {\n        confirmModal = <ConfirmModal transactionToDelete={transaction} />;\n      }\n    });\n  }\n\n  return (\n    <>\n      <tr onDoubleClick={onDoubleClick.bind(this, transaction)}>\n        <td className='date'>{transaction.date}</td>\n        <td className='amount'>{transaction.amount}</td>\n        <td className='description'>{transaction.description}</td>\n        <td className='sub-category'>{transaction.subCategory}</td>\n      </tr>\n\n      {confirmModal}\n    </>\n  );\n};\n\nexport default Transaction;\n","import React, { useState, useContext } from 'react';\nimport AddTransaction from './AddTransaction';\nimport { TransactionsContext } from '../context/TransactionsContext';\nimport Transaction from './Transaction';\n\nconst TransactionSummary = () => {\n  const { transactions } = useContext(TransactionsContext);\n  const [modal, setModal] = useState(false);\n  const [category, setCategory] = useState('expense');\n\n  let transactionModal = null;\n\n  const updateCategory = e => {\n    setCategory(e.target.value);\n  };\n\n  const toggleTransactionModal = () => {\n    setModal(!modal);\n  };\n\n  if (modal) {\n    transactionModal = (\n      <AddTransaction toggleTransactionModal={toggleTransactionModal} />\n    );\n  }\n\n  let transaction = (\n    <tr>\n      <td style={{ textAlign: 'center' }} colSpan='4'>\n        No transactions to display\n      </td>\n    </tr>\n  );\n\n  if (transactions.length > 0) {\n    const expensesArray = transactions.filter(\n      transaction => transaction.category.toLowerCase().trim() === 'expense'\n    );\n\n    const incomeArray = transactions.filter(\n      transaction => transaction.category.toLowerCase().trim() === 'income'\n    );\n\n    if (category.toLowerCase().trim() === 'expense') {\n      if (expensesArray.length > 0) {\n        transaction = expensesArray.map(transaction => {\n          return <Transaction transaction={transaction} key={transaction.id} />;\n        });\n      }\n    } else {\n      if (incomeArray.length > 0) {\n        transaction = incomeArray.map(transaction => {\n          return <Transaction transaction={transaction} key={transaction.id} />;\n        });\n      }\n    }\n  }\n\n  return (\n    <>\n      <div className='transaction-summary'>\n        <div className='heading'>\n          <h5>TRANSACTIONS</h5>\n          <div className=\"transaction-actions\">\n            <button\n              className='add-transaction-btn'\n              onClick={toggleTransactionModal}\n            >\n              Add Transaction\n            </button>\n            <select\n              name='transaction-summary-category'\n              id='transaction-summary-category-dropdown'\n              value={category}\n              onChange={updateCategory}\n            >\n              <option value='expense'>Expense</option>\n              <option value='income'>Income</option>\n            </select>\n          </div>\n        </div>\n        <table>\n          <thead>\n            <tr>\n              <th>Date</th>\n              <th style={{ textAlign: 'right' }}>Amount</th>\n              <th>Description</th>\n              <th>Category</th>\n            </tr>\n          </thead>\n          <tbody>{transaction}</tbody>\n        </table>\n      </div>\n      {transactionModal}\n    </>\n  );\n};\n\nexport default TransactionSummary;\n","import React, { useContext, useEffect } from 'react';\nimport Header from './Header';\nimport IncomeCard from './IncomeCard';\nimport ExpenseCard from './ExpenseCard';\nimport TransactionSummary from './TransactionSummary';\nimport { TransactionsContext } from '../context/TransactionsContext';\n\nconst Dashboard = () => {\n  const { transactions, updateTotalIncomeExpenses } = useContext(\n    TransactionsContext\n  );\n\n  const updateIncomeExpenseAmount = () => {\n    const income = transactions\n      .filter(transaction => transaction.category.toLowerCase() === 'income')\n      .reduce((total, transaction) => total + transaction.amount, 0);\n\n    const expense = transactions\n      .filter(transaction => transaction.category.toLowerCase() === 'expense')\n      .reduce((total, transaction) => total + transaction.amount, 0);\n\n    const totalAmount = { totalIncome: income, totalExpenses: expense };\n    updateTotalIncomeExpenses(totalAmount);\n  };\n\n  useEffect(() => {\n    updateIncomeExpenseAmount();\n  }, []);\n\n  useEffect(() => {\n    updateIncomeExpenseAmount();\n  }, [transactions]);\n\n  return (\n    <>\n      <Header />\n      <div id='summary_cards'>\n        <IncomeCard />\n        <ExpenseCard />\n      </div>\n      <TransactionSummary />\n    </>\n  );\n};\n\nexport default Dashboard;\n","import React from 'react';\nimport './App.css';\n\nimport { TransactionsProvider } from './context/TransactionsContext';\nimport { AuthProvider } from './context/AuthContext';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport SignIn from './components/Signin';\nimport Dashboard from './components/Dashboard';\nimport TransactionSummary from './components/TransactionSummary';\nimport AddTransaction from './components/AddTransaction';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <AuthProvider>\n        <TransactionsProvider>\n          <div className='container'>\n            <Switch>\n              <Route exact path='/simple-budget-react/' component={SignIn} />\n              <Route exact path='/simple-budget-react/dashboard/' component={Dashboard} />\n            </Switch>\n          </div>\n        </TransactionsProvider>\n      </AuthProvider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}