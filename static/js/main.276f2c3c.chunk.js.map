{"version":3,"sources":["components/header.js","context/AppReducer.js","context/TransactionsContext.js","components/Transaction.js","components/IncomeCard.js","components/ExpenseCard.js","components/AddTransaction.js","App.js","index.js"],"names":["Header","style","marginLeft","state","action","type","transactions","payload","initialState","id","description","amount","category","TransactionsContext","createContext","TransactionsProvider","children","useReducer","AppReducer","dispatch","Provider","value","addTransaction","transaction","TransactionSummary","className","IncomeCard","incomeArray","useContext","filter","toLowerCase","income","map","Transaction","key","totalIncome","reduce","total","ExpenseCard","expenseArray","expenses","totalExpense","AddTransaction","useState","setDescription","setAmount","setCategory","margin","onSubmit","e","preventDefault","newTransaction","Math","floor","random","onChange","target","name","placeholder","required","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.276f2c3c.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = () => {\n  return <h2 style={{marginLeft: \"15px\"}}>Budget for May</h2>;\n};\n\nexport default Header;","export default (state, action) => {\n  switch (action.type) {\n    case 'ADD_TRANSACTION':\n      return {\n        ...state,\n        transactions: [...state.transactions, action.payload]\n      };\n    default:\n      return state;\n  }\n};\n","import React, { createContext, useReducer } from 'react';\nimport AppReducer from './AppReducer';\n\nconst initialState = {\n  transactions: [\n    {\n      id: 1,\n      description: 'Food Outside Home',\n      amount: 200,\n      category: 'Expense'\n    },\n    { id: 2, description: 'Book', amount: 20, category: 'Expense' },\n    { id: 3, description: 'Movie', amount: 20, category: 'Expense' },\n    { id: 4, description: 'Salary', amount: 20000, category: 'Income' },\n    { id: 5, description: 'Other', amount: 20000, category: 'Income' }\n  ]\n};\n\n//context\nexport const TransactionsContext = createContext(initialState);\n\n// provider\nexport const TransactionsProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n\n  //actions\n  function addTransaction(transaction) {\n    dispatch({\n      type: 'ADD_TRANSACTION',\n      payload: transaction\n    });\n  }\n\n  return (\n    <TransactionsContext.Provider\n      value={{\n        transactions: state.transactions,\n        addTransaction\n      }}\n    >\n      {children}\n    </TransactionsContext.Provider>\n  );\n};\n","import React from 'react';\n\nconst TransactionSummary = ({ transaction }) => {\n  return (\n    <ul className='details'>\n      <li>\n        {transaction.description} <span>INR {transaction.amount}</span>\n      </li>\n    </ul>\n  );\n};\n\nexport default TransactionSummary;\n","import React, { useContext } from 'react';\nimport { TransactionsContext } from '../context/TransactionsContext';\nimport Transaction from './Transaction';\n\nconst IncomeCard = () => {\n  const { transactions } = useContext(TransactionsContext);\n  const incomeArray = transactions.filter(\n    transaction => transaction.category.toLowerCase() === 'income'\n  );\n\n  const income = incomeArray.map(transaction => (\n    <Transaction transaction={transaction} key={transaction.id} />\n  ));\n\n  const totalIncome = incomeArray.reduce(\n    (total, transaction) => total + transaction.amount,\n    0\n  );\n\n  return (\n    <div className='card'>\n      <div className='heading'>\n        <h4>Income</h4>\n        <p>INR {totalIncome}</p>\n      </div>\n      {income}\n    </div>\n  );\n};\n\nexport default IncomeCard;\n","import React, { useContext } from 'react';\nimport { TransactionsContext } from '../context/TransactionsContext';\nimport TransactionSummary from './Transaction';\n\nconst ExpenseCard = () => {\n  const { transactions } = useContext(TransactionsContext);\n  const expenseArray = transactions.filter(\n    transaction => transaction.category.toLowerCase() === 'expense'\n  );\n\n  const expenses = expenseArray.map(transaction => (\n    <TransactionSummary transaction={transaction} key={transaction.id} />\n  ));\n\n  const totalExpense = expenseArray.reduce(\n    (total, transaction) => total + transaction.amount,\n    0\n  );\n\n  return (\n    <div className='card'>\n      <div className='heading'>\n        <h4>Expense</h4>\n        <p>INR {totalExpense}</p>\n      </div>\n      {expenses}\n    </div>\n  );\n};\n\nexport default ExpenseCard;\n","import React, { useState, useContext } from 'react';\nimport { TransactionsContext } from '../context/TransactionsContext';\n\nconst AddTransaction = () => {\n  const [description, setDescription] = useState('');\n  const [amount, setAmount] = useState(0);\n  const [category, setCategory] = useState('Income');\n  const { transactions, addTransaction } = useContext(TransactionsContext);\n\n  const updateDescription = e => {\n    setDescription(e.target.value);\n  };\n\n  const updateAmount = e => {\n    setAmount(e.target.value);\n  };\n\n  const updateCategory = e => {\n    setCategory(e.target.value);\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    const newTransaction = {\n      id: Math.floor(Math.random() * 100002),\n      description,\n      amount: +amount,\n      category\n    };\n\n    addTransaction(newTransaction);\n  };\n\n  return (\n    <div className='card'>\n      <div className='heading'>\n        <h4 style={{ margin: '0' }}>Add a new Transaction</h4>\n      </div>\n      <form onSubmit={onSubmit}>\n        <input\n          value={description}\n          onChange={updateDescription}\n          type='text'\n          name='description'\n          id='description'\n          placeholder='Description'\n          required\n        />\n        <input\n          value={amount}\n          onChange={updateAmount}\n          type='number'\n          name='amount'\n          id='amount'\n          required\n        />\n        <div className='category'>\n          <select onChange={updateCategory} name='category' id='category'>\n            <option value='Income'>Income</option>\n            <option value='Expense'>Expense</option>\n          </select>\n        </div>\n        <button type='submit'>Submit</button>\n      </form>\n    </div>\n  );\n};\n\nexport default AddTransaction;\n","import React, { useContext } from 'react';\nimport './App.css';\n\nimport Header from './components/header';\nimport IncomeCard from './components/IncomeCard';\nimport ExpenseCard from './components/ExpenseCard';\nimport AddTransaction from './components/AddTransaction';\nimport { TransactionsProvider } from './context/TransactionsContext';\n\nfunction App() {\n  return (\n    <TransactionsProvider>\n      <div className='container'>\n        <Header />\n        <div id='summary_cards'>\n          <IncomeCard />\n          <ExpenseCard />\n        </div>\n        <AddTransaction />\n      </div>\n    </TransactionsProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}